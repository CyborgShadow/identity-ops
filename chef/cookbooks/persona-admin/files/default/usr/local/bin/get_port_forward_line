#!/usr/bin/env python
import boto.ec2
import urllib2
import sys
import logging
import json

#logging.basicConfig(level=logging.DEBUG)

vpc_map = {'us-west-2': {
              'identity-dev': (8007, 9007),
              'identity-prod' : (8050, 9050)
            },
           'us-east-1': {
              'identity-prod' : (8051, 9051)
            }
          }

response = urllib2.urlopen('http://169.254.169.254/latest/meta-data/placement/availability-zone')
region = response.read()[0:-1]
conn_ec2 = boto.ec2.connect_to_region(region)

response = urllib2.urlopen('http://169.254.169.254/latest/meta-data/instance-id')
my_instance_id = response.read()
reservations = conn_ec2.get_all_instances(instance_ids=[my_instance_id])
my_name = reservations[0].instances[0].tags['Name']
# my_stack = reservations[0].instances[0].tags['Stack']
my_stack = my_name.split('-')[-1]
my_vpc = '-'.join(my_name.split('-')[0:2])
my_env = reservations[0].instances[0].tags['Env']
my_public_ip = reservations[0].instances[0].ip_address
logging.debug([my_name, my_vpc, my_env, my_stack])

graphite_name = "%s-%s-graphite-%s" % (my_vpc, my_env, my_stack)
monitor_name = "%s-%s-monitor-univ" % (my_vpc, my_env)

reservations = conn_ec2.get_all_instances(filters={'tag:Name': graphite_name})
graphite_ip = reservations[0].instances[0].private_ip_address
reservations = conn_ec2.get_all_instances(filters={'tag:Name': monitor_name})
monitor_ip = reservations[0].instances[0].private_ip_address

print "ssh -A -L %s:%s:80 -L %s:%s:80 root@%s" % (vpc_map[region][my_vpc][0], graphite_ip, vpc_map[region][my_vpc][1], monitor_ip, my_public_ip)

