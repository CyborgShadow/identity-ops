#!/usr/bin/env python
import boto.ec2
import urllib2
import sys
import logging
import json

#logging.basicConfig(level=logging.DEBUG)

response = urllib2.urlopen('http://169.254.169.254/latest/meta-data/placement/availability-zone')
region = response.read()[0:-1]
conn_ec2 = boto.ec2.connect_to_region(region)

response = urllib2.urlopen('http://169.254.169.254/latest/meta-data/instance-id')
my_instance_id = response.read()
reservations = conn_ec2.get_all_instances(instance_ids=[my_instance_id])
my_name = reservations[0].instances[0].tags['Name']
# my_stack = reservations[0].instances[0].tags['Stack']
my_stack = my_name.split('-')[-1]
my_vpc = '-'.join(my_name.split('-')[0:2])
my_env = reservations[0].instances[0].tags['Env']
logging.debug([my_name, my_vpc, my_env, my_stack])

# reservations = conn_ec2.get_all_instances(filters={'tag:App': 'identity', 'tag:Stack' : my_stack})
reservations = conn_ec2.get_all_instances(filters={'tag:App': 'identity'})
for reservation in reservations:
  for instance in reservation.instances:
    for tier in sys.argv[1:]:
      logging.debug(instance.tags['Name'])
      if len(instance.tags['Name'].split('-')) == 5:
        logging.debug(['-'.join(instance.tags['Name'].split('-')[0:2]), my_vpc, instance.tags['Env'], my_env, instance.tags['Name'].split('-')[-1], my_stack, instance.tags['Name'].split('-')[3], sys.argv[1]])
      if len(instance.tags['Name'].split('-')) == 5 and \
        '-'.join(instance.tags['Name'].split('-')[0:2]) == my_vpc and \
        instance.tags['Env'] == my_env and \
        instance.tags['Name'].split('-')[-1] == ('univ' if tier in ['metric','dbread','db','monitor','rootzone'] else my_stack) and \
        instance.tags['Name'].split('-')[3] == tier:
          print instance.private_ip_address

